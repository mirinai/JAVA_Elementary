package ex1_array;

import java.util.Arrays;
import java.util.Comparator;

		//키보드에서 입력받기 위해 -> Scanner 클래스
		//문자열을 저장할때 쓰는 클래스 -> String 클래스
		//배열과 관련된 기능들을 제공하는 클래스 -> Arrays 클래스
		//Arrays
		//배열의 복사, 항목의 정렬, 항목의 검색등 배열들 다루기 위한 다양한 메서드를 제공
		//Arrays에 있는 기능을 쓸 때는 Arrays.함수이름()으로 씀
		
public class Ex3_Array {
	public static void main(String[] args) {
		//배열의 출력
		//toString()메서드의 도움을 받아 반복문없이 배열을 출력할수 있음
		//배열의 정의된 값을 문자열(String)꼴로 변환하여 출력한다
		
		int arr[]= {1,6,2,4,3,10,7,5,9,8};
		
		System.out.println(Arrays.toString(arr));//배열의 출력([1, 6, 2, 4, 3, 10, 7, 5, 9, 8])
		System.out.println(arr);//주소의 출력([I@58ceff1)
		
		
		System.out.println("------------------------------------");
		//배열의 정렬
		//sort()는 배열을 정렬해주는 기능이 있다.
		//기본적으로 오름차순으로 정렬이 된다.
		System.out.println("정렬 전 : "+Arrays.toString(arr));
		
		
		//오름차순 정렬
		Arrays.sort(arr);
		System.out.println("정렬 뒤 : "+Arrays.toString(arr));
		
		//내림차순 정렬
		//기본자료형 배열로는 불가능하다
		//기본자료형의 클래스타입이 필요, 이를 	Wrapper클래스라고 한다.
		//int -> Integer
		//char -> Character
		//double -> Double
		//float -> Float
		//boolean -> Boolean
		System.out.println("내림차순 정렬");
		Integer[] arr2= {1,6,2,4,3,10,7,5,9,8};
		
		Arrays.sort(arr2,Comparator.reverseOrder());//정렬 전 : [1, 6, 2, 4, 3, 10, 7, 5, 9, 8]//Comparator 한다음에 ctrl+spacebar 누르기
		System.out.println("정렬 뒤 : "+Arrays.toString(arr2));//정렬 뒤 : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
		
		System.out.println("------------------------------------");
		//배열의 복사
		//자바에서 배열은 한번 만들면 길이 바꿈x
		//따라서 더 많은 데이터를 저장하거나 기존의 배열과 똑같은 배열을 새로 만들려면
		//배열을 복사해야 한다.
		
		//배열의 복사방법
		//1. 얕은 복사(Shallow Copy) : 복사된 배열이나 원본 배열이 변경될 때 서로의 값이 같이 바뀐다
		//2. 깊은 복사(Deep Copy) : 복사된 배열이나 원본 배열이 변경될 때 서로의 값은 바뀌지 않는다.
		
		
		int[] arr01= {1,2,3};
		
		//배열의 얕은 복사
		int[] arr02=arr01;//  arr01->주소값, 주소값을 대입함
		
		System.out.println("arr01배열 : "+Arrays.toString(arr01));//arr01배열 : [1, 2, 3]
		
		//배열 arr02의 변경
		arr02[1]=10;
		//arr02의 값 변경 뒤 배열 출력
		System.out.println("arr01배열 : "+Arrays.toString(arr01));//arr01배열 : [1, 10, 3]
		
		System.out.println("arr02배열 : "+Arrays.toString(arr02));//arr02배열 : [1, 10, 3]
		//주소값이 연결되어서 같이 바뀜
		
		System.out.println("-------------------------------------------");
		System.out.println("깊은 복사");
		
		//깊은 복사
		//배열의 깊은 복사는 반복문을 써 새로운 배열에 값을 직접 넣어 주거나
		//Arrays클래스 또는 System클래스가 가진 기능을 써야 한다.
		
		int[] cards= {1,6,4,5,3,2};
		int[] newCards= new int[cards.length];
		
		//1. Arrays클래스를 이용한 깊은 복사
		System.out.println("1. Arrays클래스를 이용한 깊은 복사");
		int[] newCards2= Arrays.copyOf(cards, cards.length);
		
		System.out.println("cards배열 : "+Arrays.toString(cards));//cards배열 : [1, 6, 4, 5, 3, 2]
		System.out.println("newCards2배열 : "+Arrays.toString(newCards2));//newCards2배열 : [1, 6, 4, 5, 3, 2]
		
		//2. 반복문을 이용한 깊은 복사

		System.out.println("2. 반복문을 이용한 깊은 복사");
		for (int i=0;i<cards.length;i++) {
			newCards[i] = cards[i];
		}
		System.out.println("cards배열 : "+Arrays.toString(cards));//[1, 6, 4, 5, 3, 2]
		System.out.println("newCards배열 : "+Arrays.toString(newCards));//[1, 6, 4, 5, 3, 2]
		System.out.println("newCards2배열 : "+Arrays.toString(newCards2));//[1, 6, 4, 5, 3, 2]
		
		
		
		
	}

}
